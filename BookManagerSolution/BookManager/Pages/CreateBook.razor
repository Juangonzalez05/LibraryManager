@page "/create-book"
@inject BookService BookService
@inject AuthorService AuthorService
@using BookManager.Blazor.Models

<div class="book-form-container">
    <div class="header">
        <h3>Crear un nuevo libro</h3>
    </div>

    @if (!string.IsNullOrEmpty(message))
    {
        <div class="alert @(message.Contains("exitosamente") ? "alert-success" : "alert-danger")">
            @message
        </div>
    }

    <div class="form-container">
        <div class="form-group">
            <label>Título: <span class="required">*</span></label>
            <input class="form-control" @bind="newBook.Title" placeholder="Ingrese el título del libro" />
        </div>

        <div class="form-group">
            <label>Año:</label>
            <input type="number" class="form-control" @bind="newBook.Year" placeholder="Año de publicación" />
        </div>

        <div class="form-group">
            <label>Género:</label>
            <input class="form-control" @bind="newBook.Genre" placeholder="Género literario" />
        </div>

        <div class="form-group">
            <label>Páginas:</label>
            <input type="number" class="form-control" @bind="newBook.PageCount" placeholder="Número de páginas" />
        </div>

        <div class="form-group">
            <label>Autor: <span class="required">*</span></label>
            <select class="form-control" @bind="newBook.AuthorId">
                <option value="0">Seleccione un autor</option>
                @foreach (var author in authors)
                {
                    <option value="@author.Id">@author.FullName</option>
                }
            </select>
        </div>

        <div class="form-actions">
            <button class="btn btn-primary" @onclick="OnCreateBook">
                <span class="btn-icon">➕</span> Crear Libro
            </button>
        </div>
    </div>
</div>

@code {
    private CreateBookDTO newBook = new CreateBookDTO();
    private string message;
    private List<Author> authors = new List<Author>();

    protected override async Task OnInitializedAsync()
    {
        authors = await AuthorService.GetAuthorsAsync();
    }

    private async Task OnCreateBook()
    {
        if (string.IsNullOrWhiteSpace(newBook.Title))
        {
            message = "El título es obligatorio.";
            return;
        }

        if (newBook.AuthorId == 0)
        {
            message = "Debe seleccionar un autor.";
            return;
        }

        bool success = await BookService.CreateBookAsync(newBook);
        message = success ? "Libro creado exitosamente" : "Error al crear el libro";
    }
}

<style>
    .book-form-container {
        padding: 20px;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 1px solid #eee;
    }

        .header h3 {
            margin: 0;
            color: #2c3e50;
        }

    .form-container {
        max-width: 800px;
    }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #495057;
        }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 16px;
    }

        .form-control:focus {
            border-color: #3498db;
            outline: none;
            box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.25);
        }

    .required {
        color: #dc3545;
        margin-left: 2px;
    }

    .form-actions {
        margin-top: 30px;
        display: flex;
        justify-content: flex-end;
    }

    .btn {
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background-color: #3498db;
        color: white;
    }

        .btn-primary:hover {
            background-color: #2980b9;
        }

    .btn-icon {
        margin-right: 5px;
    }

    .alert {
        padding: 12px;
        border-radius: 4px;
        margin-bottom: 20px;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }
</style>