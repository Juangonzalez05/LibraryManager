@page "/books"
@inject BookService BookService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<div class="books-container">
    <div class="header">
        <h3>Lista de Libros</h3>
        <button class="btn btn-primary" @onclick="@(() => Navigation.NavigateTo("/create-book"))">
            <span class="btn-icon">➕</span> Nuevo Libro
        </button>
    </div>

    @if (books == null)
    {
        <div class="loading-container">
            <div class="loading-spinner"></div>
            <p>Cargando libros...</p>
        </div>
    }
    else if (!books.Any())
    {
        <div class="empty-state">
            <p>No hay libros registrados.</p>
            <button class="btn btn-outline" @onclick="@(() => Navigation.NavigateTo("/create-book"))">
                Agregar tu primer libro
            </button>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="books-table">
                <thead>
                    <tr>
                        <th>Título</th>
                        <th>Autor</th>
                        <th>Género</th>
                        <th>Año</th>
                        <th>Páginas</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var book in books)
                    {
                        <tr>
                            <td><strong>@book.Title</strong></td>
                            <td>@book.Author?.FullName</td>
                            <td>@(!string.IsNullOrEmpty(book.Genre) ? book.Genre : "---")</td>
                            <td>@(book.Year > 0 ? book.Year.ToString() : "---")</td>
                            <td>@(book.PageCount > 0 ? book.PageCount.ToString() : "---")</td>
                            <td class="actions-column">
                                <button class="btn btn-icon btn-info" @onclick="@(() => NavigateToDetails(book.Id))" title="Ver detalles">
                                    👁️
                                </button>
                                <button class="btn btn-icon btn-warning" @onclick="@(() => Navigation.NavigateTo($"/edit-book/{book.Id}"))" title="Editar">
                                    ✏️
                                </button>
                                <button class="btn btn-icon btn-danger" @onclick="@(() => DeleteBook(book.Id))" title="Eliminar">
                                    🗑️
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="pagination">
            <span>Total: @books.Count libros</span>
        </div>
    }
</div>


@code {
    private List<Book> books;

    protected override async Task OnInitializedAsync()
    {
        books = await BookService.GetBooksAsync();
    }

    private async Task DeleteBook(int id)
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", new object[] { "¿Estás seguro de que deseas eliminar este libro?" });

        if (confirmed)
        {
            bool success = await BookService.DeleteBookAsync(id);
            if (success)
            {
                books = await BookService.GetBooksAsync(); // Refrescar la lista
                StateHasChanged();
            }
        }
    }

    private void NavigateToDetails(int id)
    {
        Navigation.NavigateTo($"/book/{id}");
    }
}

<style>
    .books-container {
        padding: 20px;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 1px solid #eee;
    }

    .header h3 {
        margin: 0;
        color: #2c3e50;
    }

    .books-table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

    .books-table th, .books-table td {
        padding: 12px 15px;
        text-align: left;
        border-bottom: 1px solid #eee;
    }

    .books-table th {
        background-color: #f8f9fa;
        color: #495057;
        font-weight: 600;
    }

    .books-table tr:hover {
        background-color: #f5f9fc;
    }

    .actions-column {
        display: flex;
        gap: 8px;
    }

    .btn {
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background-color: #3498db;
        color: white;
    }

    .btn-primary:hover {
        background-color: #2980b9;
    }

    .btn-icon {
        padding: 6px 8px;
        font-size: 14px;
    }

    .btn-info {
        background-color: #17a2b8;
        color: white;
    }

    .btn-warning {
        background-color: #ffc107;
        color: #212529;
    }

    .btn-danger {
        background-color: #dc3545;
        color: white;
    }

    .btn-outline {
        background-color: transparent;
        border: 1px solid #3498db;
        color: #3498db;
    }

    .btn-outline:hover {
        background-color: #3498db;
        color: white;
    }

    .btn-icon:hover {
        transform: scale(1.1);
    }

    .loading-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 40px 0;
    }

    .loading-spinner {
        width: 40px;
        height: 40px;
        border: 4px solid rgba(0, 0, 0, 0.1);
        border-radius: 50%;
        border-left-color: #3498db;
        animation: spin 1s linear infinite;
        margin-bottom: 15px;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(360deg);
        }
    }

    .empty-state {
        text-align: center;
        padding: 40px 0;
        color: #6c757d;
    }

    .pagination {
        display: flex;
        justify-content: flex-end;
        padding: 10px 0;
        color: #6c757d;
    }

    .table-responsive {
        overflow-x: auto;
    }

    .btn-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }
</style>